// # // Python-ის dictionary საშუალებას გაძლევს, გასაღებებად (key-ებად) გამოიყენო სხვადასხვა ტიპის მნიშვნელობები (მაგალითად, რიცხვები, ტექსტი, tuple-ები), ხოლო JavaScript-ის object მხოლოდ ტექსტსა და სპეციალურ სიმბოლოებს (symbol) იყენებს.
// # // JavaScript-ის object უკვე შეიცავს ჩაშენებულ ფუნქციებს, რომლებიც ზოგჯერ ზედმეტია, ხოლო Python-ის dictionary უფრო მარტივია და ზედმეტი არაფერია.
// # // მონაცემების მიღებისა და გამოყენების მეთოდები ცოტათი განსხვავდება. 



let person = {
    name: "Levan",
    age: 25,
    greet: function() {
        return "Hello!";
    }
};

console.log(person.greet());  // მეთოდის გამოძახება

// // ფუნქცია და მეთოდი ორივე მოქმედებას ასრულებს, მაგრამ მთავარი განსხვავება იმაშია, რომ ფუნქცია დამოუკიდებელია, ხოლო მეთოდი ობიექტს ეკუთვნის.
// ფუნქცია არის ცალკე მდგომი კოდის ნაწილი, რომელსაც შეიძლება გადავცეთ მონაცემები, დაამუშავოს ისინი და შედეგი დაგვიბრუნოს.

// ფუნქციას არ სჭირდება ობიექტი მუშაობისთვის.
// შეგვიძლია გამოვიძახოთ ნებისმიერი ადგილიდან.
// არ აქვს წვდომა ობიექტის მონაცემებზე, რადგან ცალკე არსებობს.მეთოდი
// მეთოდი არის ობიექტის შიგნით განთავსებული ფუნქცია, რომელსაც შეუძლია ამ ობიექტის მონაცემებთან მუშაობა.

// მხოლოდ ობიექტის შიგნით არსებობს.
// გამოიძახება ობიექტის სახელით.
// შეუძლია ობიექტის მონაცემებზე მიწვდომა . ფუნქცია დამოუკიდებლად მუშაობს და ნებისმიერ მონაცემს იღებს.
//  მეთოდი კონკრეტულ ობიექტს ეკუთვნის და მის შიდა მონაცემებთან მუშაობ



function Person(name, age, country) {
    return { name, age, country };
}

let person1 = Person("Levan", 25, "Georgia");

console.log(person1.name); 
console.log(person1.age);   
console.log(person1.country);
